name: Build check

on:
  push:
    branches:
      - "**"
    tags-ignore:
      - "*" # We don't want this to run on release
  pull_request:

jobs:
  build-windows:
    name: Windows
    runs-on: windows-2016
    env:
      BOOST_ROOT: C:/tools/boost/x86_64
    steps:
      - uses: actions/checkout@v2

      - name: Setup msbuild
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Install Boost
        shell: powershell
        run: |
          echo "${env:BOOST_ROOT}"
          $Url = "https://sourceforge.net/projects/boost/files/boost-binaries/1.72.0/boost_1_72_0-msvc-14.1-64.exe"
          (New-Object System.Net.WebClient).DownloadFile($Url, "$env:TEMP\boost.exe")
          Start-Process -Wait -FilePath "$env:TEMP\boost.exe" "/SILENT","/SP-","/SUPPRESSMSGBOXES","/DIR=${env:BOOST_ROOT}"

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          host: "windows"
          target: "desktop"
          modules: "qttools5 qtcharts"
          install-deps: "true"

      - name: Clone conceal-core
        shell: powershell
        run: |
          Remove-Item cryptonote -Recurse -Force -ErrorAction Ignore
          git clone https://github.com/ConcealNetwork/conceal-core.git cryptonote

      - name: Pre-build setup
        shell: powershell
        run: |
          $search = "set\(CN_VERSION "
          $ccx_version = ((Get-Content CryptoNoteWallet.cmake | Select-String $search) | %{$_ -replace $search, ""}) | %{$_ -replace "\)", ""}
          $ccx_version = $ccx_version + ".0"

          # Update "CMakeLists.txt" with cmake dir
          $qt5_cmake = "${{ env.Qt5_Dir }}/lib/cmake" -replace '[/]', '\\'
          $file = "CMakeLists.txt"
          $find = '^set\(CMAKE_PREFIX_PATH.+'
          $replace = "set(CMAKE_PREFIX_PATH `"$($qt5_cmake)`")"
          (Get-Content $file) | %{$_ -replace $find, $replace} | Set-Content $file

          # Update ConcealWallet.nsi with the current version
          $file = "ConcealWallet.nsi"
          $find = "^!define VERSION.+"
          $replace = "!define VERSION '$ccx_version.0'"
          (Get-Content $file) | %{$_ -replace $find, $replace} | Set-Content $file

      - name: Build
        shell: powershell
        id: build
        run: |
          $build_folder = "build"
          $release_folder = "Release"
          $sha = "${{ github.sha }}"
          $ccx_version = $sha.SubString(0,7)
          $release_name = "ccx-desktop-win64-dev-$ccx_version"

          New-Item "$build_folder\$release_folder" -ItemType Directory
          cd "$build_folder"

          cmake -G "Visual Studio 15 2017 Win64" ..
          msbuild CONCEAL-GUI.sln /p:Configuration=Release /m:2

          echo "::set-output name=build_folder::${build_folder}"
          echo "::set-output name=release_folder::${release_folder}"
          echo "::set-output name=release_name::${release_name}"

      - name: Pack
        shell: powershell
        id: pack
        run: |
          $build_folder = "${{ steps.build.outputs.build_folder }}"
          $release_name = "${{ steps.build.outputs.release_name }}"
          $release_folder = "${{ steps.build.outputs.release_folder }}"

          cd "$build_folder/$release_folder"

          mkdir "Final"

          choco install openssl -y

          cp "C:\Program Files\OpenSSL-Win64\libcrypto*.dll" "Final/"
          cp "C:\Program Files\OpenSSL-Win64\libssl*.dll" "Final/"

          windeployqt --release CONCEAL-GUI.exe --dir "Final/" --no-translations --no-opengl-sw
          cd ../../
          makensis ConcealWallet.nsi
          cd "$build_folder/$release_folder"
          Compress-Archive -Path Conceal-Setup.exe -DestinationPath "$release_name.zip"

          $artifact_path = "$build_folder/$release_folder/$release_name.zip"
          echo "::set-output name=artifact_path::${artifact_path}"

      - name: Upload To GH Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.build.outputs.release_name }}
          path: ${{ steps.pack.outputs.artifact_path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-linux:
    name: Linux
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-16.04, ubuntu-18.04, ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare version
        run: |
          ccx_version=${GITHUB_SHA::7}
          release_name=ccx-desktop-"${{ matrix.os }}"-dev-"$ccx_version"
          echo "CCX_VERSION=$ccx_version" >> $GITHUB_ENV
          echo "RELEASE_NAME=$release_name" >> $GITHUB_ENV

      - name: Install dedendencies
        run: |
          sudo apt-get update
          sudo apt-get install qt5-default qttools5-dev qttools5-dev-tools libboost-all-dev

      - name: Clone conceal-core
        run: |
          rm -rf cryptonote
          git clone https://github.com/ConcealNetwork/conceal-core.git cryptonote

      - name: Build
        run: |
          echo "$RELEASE_NAME"
          make -j2 build-release
          mkdir "$RELEASE_NAME"
          mkdir -p "$RELEASE_NAME"/icon
          mv build/release/CONCEAL-GUI $RELEASE_NAME
          cp conceal-desktop.desktop $RELEASE_NAME
          cp src/images/conceal.png $RELEASE_NAME/icon
          tar -czf "$RELEASE_NAME".tar.gz "$RELEASE_NAME"

          echo "::set-output name=release_name::${RELEASE_NAME}"
          echo "::set-output name=artifact_path::${RELEASE_NAME}.tar.gz"

      - name: Upload To GitHub Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.build.outputs.release_name }}
          path: ${{ steps.build.outputs.artifact_path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    name: macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          modules: "qtcharts"

      - name: Install dependencies
        run: |
          brew install boost

      - name: Clone conceal-core
        run: |
          rm -rf cryptonote
          git clone https://github.com/ConcealNetwork/conceal-core.git cryptonote

      - name: Build
        id: build
        run: |
          build_folder="build/release"
          ccx_ver=${GITHUB_SHA::7}
          release_name="ccx-desktop-macOS-dev-$ccx_ver"
          app_name="CONCEAL-GUI.app"

          make -j4 build-release
          cd "$build_folder"
          macdeployqt "$app_name"
          cpack
          mkdir "$release_name"
          mv *.dmg "$release_name".dmg
          mv "$release_name".dmg "$release_name"

          echo "::set-output name=release_name::${release_name}"
          echo "::set-output name=artifact_path::$build_folder/$release_name"

      - name: Upload To GH Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.build.outputs.release_name }}
          path: ${{ steps.build.outputs.artifact_path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
